<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart36.mybatis.mapper.MemberMapper">
	<resultMap type="Member" id="memberResultMap">
		<result column="m_id" 		property="memberId"/>
		<result column="m_pw" 		property="memberPw"/>
		<result column="m_name" 	property="memberName"/>
		<result column="m_level" 	property="memberLevel"/>
		<result column="m_email" 	property="memberEmail"/>
		<result column="m_addr" 	property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
	</resultMap>
	<select id="getLoginCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_login;
	</select>
	
	<select id="getLoginHistory" resultType="hashMap">
		SELECT 
				login.rowNum
			, 	login_id	AS loginId
			, 	login_date	AS loginDate
			, 	logout_date AS logoutDate
		FROM 
			(SELECT
				  (@rowNum := @rowNum +1) AS rowNum
				, l.login_id
				, l.login_date
				, l.logout_date
			 FROM
			 	tb_login AS l
			 	JOIN
			 	(SELECT @rowNum := 0) AS r
			 ORDER BY l.login_date DESC) AS login
		LIMIT #{startRow},#{ROW_PER_PAGE};
	</select>
	
	<select id="getSearchMemberList" parameterType="String" resultMap="memberResultMap">
		SELECT 
			 m_id		
			,m_pw		
			,m_name		
			,m_level	
			,m_email	
			,m_addr		
			,m_reg_date	
		FROM tb_member
		WHERE
			${sk} LIKE CONCAT('%',#{sv},'%')
	</select>

	<delete id="removeGoods" parameterType="String">
		DELETE FROM tb_goods
		WHERE
			<if test="memberId != null and memberId != ''.toString()">			
				g_seller_id=#{memberId}
			</if> 
	</delete>
	<delete id="removeOrder" parameterType="String">
		DELETE FROM tb_order
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<foreach collection="goodsCodeList" item="item" separator="OR">
				<if test="item.goodsCode != null and item.goodsCode != ''.toString()">
					o_g_code=#{item.goodsCode}
				</if>
			</foreach>
		</trim>
	</delete>
	<select id="getGoodsCodeById" parameterType="String" resultType="hashMap">
		SELECT
			g_code AS goodsCode
		FROM
			tb_goods
		WHERE
			g_seller_id = #{memberId}
	</select>
	<delete id="removeLogin" parameterType="String">
		DELETE FROM tb_login
		WHERE
			<if test="memberId != null and memberId != ''.toString()">			
				login_id=#{memberId}
			</if> 
	</delete>
	<delete id="removeMember" parameterType="String">
		DELETE FROM tb_member
		WHERE
			<if test="memberId != null and memberId != ''.toString()">			
				m_id=#{memberId}
			</if> 
	</delete>

	<update id="modifyMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">
			<if test="memberPw != null and memberPw neq ''.toString()">
   				 m_pw = #{memberPw},
  			</if>
			<if test="memberName != null and memberName neq ''.toString()">
   				 m_name = #{memberName},
  			</if>
			<if test="memberLevel != null and memberLevel neq ''.toString()">
   				 m_level = #{memberLevel},
  			</if>
			<if test="memberEmail != null and memberEmail neq ''.toString()">
   				 m_email = #{memberEmail},
  			</if>
			<if test="memberAddr != null and memberAddr neq ''.toString()">
   				 m_addr = #{memberAddr}
  			</if>
		</trim>
		WHERE
			m_id = #{memberId}
	
	</update>

	<select id="getMemberById" parameterType="String" resultType="Member">
		SELECT 
			 m_id		AS memberId
			,m_pw		AS memberPw
			,m_name		AS memberName
			,m_level	AS memberLevel
			,m_email	AS memberEmail
			,m_addr		AS memberAddr
			,m_reg_date	AS memberRegDate
		FROM 
			tb_member
		WHERE
			m_id = #{memberId}
	</select>
	
	<insert id="addMember" parameterType="Member">
		INSERT INTO tb_member(
			 m_id
			,m_pw
			,m_name
			,m_level
			,m_email
			,m_addr
			,m_reg_date
		)VALUES(
			 #{memberId}
			,#{memberPw}
			,#{memberName}
			, 4
			,#{memberEmail}
			,#{memberAddr}
			,NOW()
		)
	</insert>
	
	<select id="getMemberList" resultType="Member">
		SELECT 
			 m_id		AS memberId
			,m_pw		AS memberPw
			,m_name		AS memberName
			,m_level	AS memberLevel
			,m_email	AS memberEmail
			,m_addr		AS memberAddr
			,m_reg_date	AS memberRegDate
		FROM 
			tb_member
	</select>
</mapper>